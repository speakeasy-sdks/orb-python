"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import invoices as shared_invoices
from typing import Any, Optional


@dataclasses.dataclass
class ListInvoicesRequest:
    
    customer_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'customer_id', 'style': 'form', 'explode': True }})
    r"""Filter by a specific customer (cannot be used with `external_customer_id`)"""
    external_customer_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'external_customer_id', 'style': 'form', 'explode': True }})
    r"""Filter by a specific customer (cannot be used with `customer_id`)"""
    status: Optional[Any] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})
    r"""Filter to invoices of a particular status (`draft`, `issued`, `paid`, `void`, `synced`); this param can be used to filter to a single status (`?status=\\"draft\\"`) or a set of statuses (`?status[]=paid&status[]=void`)"""
    subscription_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'subscription_id', 'style': 'form', 'explode': True }})
    r"""Filter by a specific subscription"""
    

@dataclasses.dataclass
class ListInvoicesResponse:
    
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    invoices: Optional[shared_invoices.Invoices] = dataclasses.field(default=None)
    r"""OK"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    