"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
import requests as requests_http
from ..shared import subscription as shared_subscription
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from orb import utils
from typing import Optional

class CancelSubscriptionRequestBodyCancelOption(str, Enum):
    r"""Determines the timing of subscription cancellation"""
    IMMEDIATE = 'immediate'
    END_OF_SUBSCRIPTION_TERM = 'end_of_subscription_term'
    REQUESTED_DATE = 'requested_date'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CancelSubscriptionRequestBody:
    
    cancel_option: CancelSubscriptionRequestBodyCancelOption = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancel_option') }})
    r"""Determines the timing of subscription cancellation"""
    cancellation_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancellation_date'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date that the cancellation should take effect. This parameter can only be passed if the `cancel_option` is `requested_date`."""
    

@dataclasses.dataclass
class CancelSubscriptionRequest:
    
    subscription_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'subscription_id', 'style': 'simple', 'explode': False }})
    request_body: Optional[CancelSubscriptionRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    

@dataclasses.dataclass
class CancelSubscriptionResponse:
    
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    subscription: Optional[shared_subscription.Subscription] = dataclasses.field(default=None)
    r"""OK"""
    